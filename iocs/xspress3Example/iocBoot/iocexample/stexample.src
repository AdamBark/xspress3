#!$(INSTALL)/bin/$(ARCH)/example

## You may have to change example to something else
## everywhere it appears in this file

cd "$(INSTALL)"

## Register all support components
dbLoadDatabase("dbd/example.dbd")
example_registerRecordDeviceDriver(pdbbase)

##################################################
# Start Xspress3 driver

# Parameters
# Asyn port
# Max Num Channels (also used in xsp3_config)
# Num Cards (used in xsp3_config)
# Max Frames For API Config (depends on Xspress3 firmware config).
# Max Driver Frames (used to limit how big driver arrays are). Needs to match database MAX_FRAMES_DRIVER_RBV.
# Max size of spectra
# Asyn max buffers (0=default)
# Asyn max memory (0=default)
# Debug (0=off, 1=on)
# simTest - Run up the driver in simulation mode.
xspress3Config("XSP3", 8, 1, "192.168.0.1", 16384, 4096, 4096, -1, -1, 0, 1)

# NDFileHDF5Configure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr)
NDFileHDF5Configure("XSP3.HDF5", 10000, 0, "XSP3", 0)

NDProcessConfigure("XSP3.PROC", 2, 0, "XSP3", 0, -1, -1)

#ROI plugin for each channel, to extract the 1-D spectra for visualisation
NDROIConfigure("XSP3.ROI1", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI2", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI3", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI4", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI5", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI6", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI7", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROI8", 2, 0, "XSP3", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM1", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM2", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM3", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM4", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM5", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM6", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM7", 2, 0, "XSP3.PROC", 0, -1, -1)
NDROIConfigure("XSP3.ROISUM8", 2, 0, "XSP3.PROC", 0, -1, -1)

#Standard arrays plugin for channel access visualisation of the 1-D arrays
NDStdArraysConfigure("XSP3.ARR1", 5, 0, "XSP3.ROI1", 0, -1)
NDStdArraysConfigure("XSP3.ARR2", 5, 0, "XSP3.ROI2", 0, -1)
NDStdArraysConfigure("XSP3.ARR3", 5, 0, "XSP3.ROI3", 0, -1)
NDStdArraysConfigure("XSP3.ARR4", 5, 0, "XSP3.ROI4", 0, -1)
NDStdArraysConfigure("XSP3.ARR5", 5, 0, "XSP3.ROI5", 0, -1)
NDStdArraysConfigure("XSP3.ARR6", 5, 0, "XSP3.ROI6", 0, -1)
NDStdArraysConfigure("XSP3.ARR7", 5, 0, "XSP3.ROI7", 0, -1)
NDStdArraysConfigure("XSP3.ARR8", 5, 0, "XSP3.ROI8", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM1", 5, 0, "XSP3.ROISUM1", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM2", 5, 0, "XSP3.ROISUM2", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM3", 5, 0, "XSP3.ROISUM3", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM4", 5, 0, "XSP3.ROISUM4", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM5", 5, 0, "XSP3.ROISUM5", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM6", 5, 0, "XSP3.ROISUM6", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM7", 5, 0, "XSP3.ROISUM7", 0, -1)
NDStdArraysConfigure("XSP3.ARRSUM8", 5, 0, "XSP3.ROISUM8", 0, -1)


#asynSetTraceMask("XSP3",0,0x11)
#asynSetTraceIOMask("XSP3",0,0x11)
#asynSetTraceMask("XSP3",0,0xFF)
#asynSetTraceIOMask("XSP3",0,0xFF)
#asynSetTraceMask("XSP3.HDF5",0,0xFF)
#asynSetTraceIOMask("XSP3.HDF5",0,0xFF)


##################################################


####################################################################
### Initialise save restore

#save_restoreSet_Debug(0)

### status-PV prefix, so save_restore can find its status PV's.
#save_restoreSet_status_prefix("mp49:xspress3")

### ok to restore a save set that had missing values (no CA connection to PV)?
### ok to save a file if some CA connections are bad?
#save_restoreSet_IncompleteSetsOk(1)

### In the restore operation, a copy of the save file will be written.  The
### file name can look like "auto_settings.sav.bu", and be overwritten every
### reboot, or it can look like "auto_settings.sav_020306-083522" (this is what
### is meant by a dated backup file) and every reboot will write a new copy.
#save_restoreSet_DatedBackupFiles(1)

### specify where save files should go
#set_savefile_path("/tmp/")

#set_requestfile_path("$(INSTALL)/data")

### Only restore after IOC init
#set_pass1_restoreFile("example.sav")

### Number of sequenced backup files (e.g., 'auto_settings.sav0') to write
#save_restoreSet_NumSeqFiles(3)

### Time interval between sequenced backups
#save_restoreSet_SeqPeriodInSeconds(600)

###########################################################

## Load record instances
dbLoadRecords("db/example.db")

iocInit()

# Save settings every 10 seconds
create_monitor_set("example.req", 10)


#Set up some of the more complicated HDF PVs
dbpf("mp49:XSP3:HDF5:FileTemplate", "%s%s%d.hdf5")
dbpf("mp49:XSP3:HDF5:FileWriteMode", "Stream")
dbpf("mp49:XSP3:HDF5:EnableCallbacks", "Enable")

#Set up the PROC plugin spectra summing
dbpf("mp49:XSP3:PROC:EnableFilter", "Enable")
dbpf("mp49:XSP3:PROC:FilterType", "Sum")

#Set up the ROI parameters
dbpf("mp49:XSP3:ROI1:EnableX", "Yes")
dbpf("mp49:XSP3:ROI2:EnableX", "Yes")
dbpf("mp49:XSP3:ROI3:EnableX", "Yes")
dbpf("mp49:XSP3:ROI4:EnableX", "Yes")
dbpf("mp49:XSP3:ROI5:EnableX", "Yes")
dbpf("mp49:XSP3:ROI6:EnableX", "Yes")
dbpf("mp49:XSP3:ROI7:EnableX", "Yes")
dbpf("mp49:XSP3:ROI8:EnableX", "Yes")
dbpf("mp49:XSP3:ROI1:EnableY", "Yes")
dbpf("mp49:XSP3:ROI2:EnableY", "Yes")
dbpf("mp49:XSP3:ROI3:EnableY", "Yes")
dbpf("mp49:XSP3:ROI4:EnableY", "Yes")
dbpf("mp49:XSP3:ROI5:EnableY", "Yes")
dbpf("mp49:XSP3:ROI6:EnableY", "Yes")
dbpf("mp49:XSP3:ROI7:EnableY", "Yes")
dbpf("mp49:XSP3:ROI8:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM1:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM2:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM3:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM4:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM5:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM6:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM7:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM8:EnableX", "Yes")
dbpf("mp49:XSP3:ROISUM1:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM2:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM3:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM4:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM5:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM6:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM7:EnableY", "Yes")
dbpf("mp49:XSP3:ROISUM8:EnableY", "Yes")
dbpf("mp49:XSP3:ROI1:MinY", "0")
dbpf("mp49:XSP3:ROI2:MinY", "1")
dbpf("mp49:XSP3:ROI3:MinY", "2")
dbpf("mp49:XSP3:ROI4:MinY", "3")
dbpf("mp49:XSP3:ROI5:MinY", "4")
dbpf("mp49:XSP3:ROI6:MinY", "5")
dbpf("mp49:XSP3:ROI7:MinY", "6")
dbpf("mp49:XSP3:ROI8:MinY", "7")
dbpf("mp49:XSP3:ROI1:SizeY", "1")
dbpf("mp49:XSP3:ROI2:SizeY", "1")
dbpf("mp49:XSP3:ROI3:SizeY", "1")
dbpf("mp49:XSP3:ROI4:SizeY", "1")
dbpf("mp49:XSP3:ROI5:SizeY", "1")
dbpf("mp49:XSP3:ROI6:SizeY", "1")
dbpf("mp49:XSP3:ROI7:SizeY", "1")
dbpf("mp49:XSP3:ROI8:SizeY", "1")
dbpf("mp49:XSP3:ROISUM1:MinY", "0")
dbpf("mp49:XSP3:ROISUM2:MinY", "1")
dbpf("mp49:XSP3:ROISUM3:MinY", "2")
dbpf("mp49:XSP3:ROISUM4:MinY", "3")
dbpf("mp49:XSP3:ROISUM5:MinY", "4")
dbpf("mp49:XSP3:ROISUM6:MinY", "5")
dbpf("mp49:XSP3:ROISUM7:MinY", "6")
dbpf("mp49:XSP3:ROISUM8:MinY", "7")
dbpf("mp49:XSP3:ROISUM1:SizeY", "1")
dbpf("mp49:XSP3:ROISUM2:SizeY", "1")
dbpf("mp49:XSP3:ROISUM3:SizeY", "1")
dbpf("mp49:XSP3:ROISUM4:SizeY", "1")
dbpf("mp49:XSP3:ROISUM5:SizeY", "1")
dbpf("mp49:XSP3:ROISUM6:SizeY", "1")
dbpf("mp49:XSP3:ROISUM7:SizeY", "1")
dbpf("mp49:XSP3:ROISUM8:SizeY", "1")

