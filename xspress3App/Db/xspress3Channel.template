# ///
# /// The MCA readout for channel $(CHAN) 
# ///
record(waveform, "$(P)$(R)C$(CHAN)_MCA_RBV")
{
    field(DTYP, "asynFloat64ArrayIn")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_MCA")
    field(FTVL, "DOUBLE")
    field(NELM, "$(MAX_SPECTRA)")
    field(SCAN, "I/O Intr")
}

# ///
# /// aCalcout record to sum up the MCA spectra for visualization only
# ///
record(acalcout, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV")
{
    field(DTYP, "Soft Channel")
    field(INAA, "$(P)$(R)C$(CHAN)_MCA_RBV.VAL CP")
    field(INBB, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV.AVAL")
    field(NELM, "$(MAX_SPECTRA)")
    field(CALC, "AA+BB")
}

# /// 
# /// Erase MCA aCalc summed data
# ///
record(seq,"$(P)$(R)C$(CHAN)_ERASE_ACALC") {
    field(DOL1, "0")
    field(LNK1, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV.CALC PP")
    field(DLY1, "0.1")
    field(DOL2, "1")
    field(LNK2, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV_CALC.PROC PP")
    field(DLY2, "0.1")
}

# /// 
# /// Record to hold the calc string for the $(P)$(R)C$(CHAN)_MCA_SUM_RBV record.
# ///
record(stringout, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV_CALC")
{
    field(VAL, "AA+BB")
    field(OUT, "$(P)$(R)C$(CHAN)_MCA_SUM_RBV.CALC")
}

# /// 
# /// Erase MCA aCalc summed data (one record for all channels)
# ///
record(seq,"$(P)$(R)ERASE_ACALC") {
    field(DOL$(CHAN), "1")
    field(LNK$(CHAN), "$(P)$(R)C$(CHAN)_ERASE_ACALC.PROC PP")
}


##########################################################################
# Add in SCA records.
##########################################################################

#Time SCA
substitute "SCA=0"
include "xspress3ChannelSCA.template"

#Reset ticks SCA
substitute "SCA=1"
include "xspress3ChannelSCA.template"

#Reset counts SCA
substitute "SCA=2"
include "xspress3ChannelSCA.template"

#All event SCA
substitute "SCA=3"
include "xspress3ChannelSCA.template"

#All good SCA
substitute "SCA=4"
include "xspress3ChannelSCAThreshold.template"

#Window 1 SCA
substitute "SCA=5"
include "xspress3ChannelSCALimits.template"

#Window 2 SCA
substitute "SCA=6"
include "xspress3ChannelSCALimits.template"

#Pileup SCA
substitute "SCA=7"
include "xspress3ChannelSCA.template"


##########################################################################
# Add in MCA records.
##########################################################################

substitute "ROI=1"
include "xspress3ChannelMCAROI.template"

substitute "ROI=2"
include "xspress3ChannelMCAROI.template"

substitute "ROI=3"
include "xspress3ChannelMCAROI.template"

substitute "ROI=4"
include "xspress3ChannelMCAROI.template"


##########################################################################
# Dead Time Correction Parameters Read At Connection Time
##########################################################################

# ///
# /// Read the Dead Time Correction Flags.
# ///
record(longin, "$(P)$(R)C$(CHAN)_DTC_FLAGS_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_DTC_FLAGS")
   field(SCAN, "I/O Intr")
}

# ///
# /// Read the Dead Time Correction All Event Grad parameter.
# ///
record(ai, "$(P)$(R)C$(CHAN)_DTC_AEG_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_DTC_AEG")
   field(SCAN, "I/O Intr")
   field(PREC, "4")
}

# ///
# /// Read the Dead Time Correction All Event Offset parameter.
# ///
record(ai, "$(P)$(R)C$(CHAN)_DTC_AEO_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_DTC_AEO")
   field(SCAN, "I/O Intr")
   field(PREC, "4")
}

# ///
# /// Read the Dead Time Correction In Window Grad parameter.
# ///
record(ai, "$(P)$(R)C$(CHAN)_DTC_IWG_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_DTC_IWG")
   field(SCAN, "I/O Intr")
   field(PREC, "4")
}

# ///
# /// Read the Dead Time Correction In Window Offset parameter.
# ///
record(ai, "$(P)$(R)C$(CHAN)_DTC_IWO_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XSP3_CHAN_DTC_IWO")
   field(SCAN, "I/O Intr")
   field(PREC, "4")
}

